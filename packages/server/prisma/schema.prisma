generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email         String      @id
  firstname     String
  lastname      String
  role          UserRoles[]
  events        Event[]
  locations     Location[]
  notifications Boolean

  @@map("users")
}

model UserRoles {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [email], references: [email])
  email  String
  role   Role   @relation(fields: [roleId], references: [id])
  roleId Int

  @@map("user_roles")
}

model Role {
  id        Int         @id @default(autoincrement())
  userRoles UserRoles[]
  name      Roles       @unique

  @@map("roles")
}

model Event {
  id         String       @id @default(uuid())
  name       String       
  user       User         @relation(fields: [email], references: [email])
  email      String
  type       EventType
  date       DateTime
  budget     Decimal
  location   Location     @relation(fields: [locationId], references: [id])
  locationId String
  headcount  Int
  EventGuest EventGuest[]

  @@unique([name, email])
  @@map("events")
}

model Location {
  id          String  @id @default(uuid())
  user        User    @relation(fields: [email], references: [email])
  email       String
  name        String  @unique
  events      Event[]
  description String
  address     Address @relation(fields: [addressId], references: [id])
  addressId   String  @unique
  type        String
  price       Decimal
  phone       String
  link        String

  @@unique([name, email])
  @@map("locations")
}

model Address {
  id        String    @id @default(uuid())
  country   Country   @relation(fields: [countryId], references: [id])
  countryId Int
  street    String
  city      String
  state     String
  zip_code  Decimal
  Location  Location?

  @@map("addresses")
}

model Country {
  id      Int       @id @default(autoincrement())
  address Address[]
  name    String
  ISO     String

  @@map("countries")
}

model EventGuest {
  id      Int    @id @default(autoincrement())
  event   Event  @relation(fields: [eventId], references: [id])
  eventId String
  guest   Guest  @relation(fields: [guestId], references: [id])
  guestId String

  @@unique([eventId, guestId])
  @@map("events_guests")
}

model Guest {
  id            String       @id @default(uuid())
  userEmail     String       
  firstname     String
  lastname      String
  email         String
  special_needs String
  EventGuest    EventGuest[] 

  @@unique([userEmail, firstname, lastname, email, special_needs])
  @@map("guests")
}

enum Roles {
  USER
  ADMIN
}

enum EventType {
  WEDDING
  GRADUATION
  PARTY
  CONFERENCE
  EXHIBITION
  CUSTOM
}
